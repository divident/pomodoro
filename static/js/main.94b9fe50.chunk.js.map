{"version":3,"sources":["CircleProgress.js","Timer.js","settings.png","App.js","reportWebVitals.js","index.js"],"names":["CircleProgress","props","stroke","radius","color","normalizedRadius","circumference","Math","PI","useState","progress","setProgress","useEffect","height","width","className","strokeDasharray","style","strokeDashoffset","strokeWidth","fill","r","cx","cy","zeroPad","num","places","String","padStart","Timer","setTimer","seconds","setSeconds","minutes","setMinutes","lastTimer","setLastTimer","timeSec","floor","intervalId","setInterval","timer","max","stop","clearInterval","App","setProgresss","timers","setTimers","tmpTimers","setTmpTimers","timerName","setTimerName","setStop","lastStep","setLastStep","showSetting","setShowSetting","fontFamily","setFontFamily","primaryColor","setPrimaryColor","step","interval","state","min","changeTimer","index","onTimeChange","ev","s","target","value","onFontChange","font","onColorChange","bodyStyles","document","body","setProperty","fontSize","onClick","src","settings","alt","htmlFor","id","pomodoro","onChange","Array","from","keys","map","e","short","long","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mRAiCeA,MA9Bf,SAAwBC,GAEpB,IAAQC,EAA0BD,EAA1BC,OAAQC,EAAkBF,EAAlBE,OAAQC,EAAUH,EAAVG,MAClBC,EAAmBF,EAAkB,EAATD,EAC5BI,EAAmC,EAAnBD,EAAuBE,KAAKC,GAClD,EAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,qBAAU,WACND,EAAYL,EAAiBL,EAAMS,SAAW,IAAMJ,KACrD,CAACL,EAAMS,SAAUJ,IAGhB,qBACIO,OAAiB,EAATV,EACRW,MAAgB,EAATX,EAFX,SAII,wBAAQY,UAAU,SACdb,OAAQE,EACRY,gBAAe,UAAKV,EAAL,YAAsBA,GACrCW,MAAO,CAAEC,iBAAkBR,GAC3BS,YAAajB,EACbkB,KAAK,cACLC,EAAGhB,EACHiB,GAAInB,EACJoB,GAAIpB,OCxBdqB,G,MAAU,SAACC,EAAKC,GAAN,OAAiBC,OAAOF,GAAKG,SAASF,EAAQ,OAoC/CG,MAjCf,SAAe5B,GAEX,MAA0BQ,mBAAS,GAAnC,mBAAcqB,GAAd,WACA,EAA8BrB,mBAAS,GAAvC,mBAAOsB,EAAP,KAAgBC,EAAhB,KACA,EAA8BvB,mBAAS,GAAvC,mBAAOwB,EAAP,KAAgBC,EAAhB,KACA,EAAkCzB,mBAAS,GAA3C,mBAAO0B,EAAP,KAAkBC,EAAlB,KAqBA,OAnBAxB,qBAAU,WACFuB,IAAclC,EAAMoC,UACpBD,EAAanC,EAAMoC,SACnBP,EAAS7B,EAAMoC,SACfL,EAAW/B,EAAMoC,QAAU,IAC3BH,EAAW3B,KAAK+B,MAAMrC,EAAMoC,QAAU,MAE1C,IAAME,EAAaC,aAAY,kBAC3BV,GAAS,SAAAW,GAGL,OAFAT,EAAWS,EAAQ,IACnBP,EAAW3B,KAAK+B,MAAMG,EAAQ,KACvBlC,KAAKmC,IAAID,EAAQ,EAAG,QAC3B,KAIR,OAHIxC,EAAM0C,MACNC,cAAcL,GAEX,kBAAMK,cAAcL,MAC5B,CAACtC,EAAMoC,QAASpC,EAAM0C,KAAMR,IAG3B,8BACI,oBAAGpB,UAAU,cAAb,UAA4BS,EAAQS,EAAS,GAA7C,IAAkDT,EAAQO,EAAS,SClChE,MAA0B,qCCqJ1Bc,MA9If,WAEE,MAAiCpC,mBAAS,GAA1C,mBAAOC,EAAP,KAAiBoC,EAAjB,KACA,EAA4BrC,mBAAS,CACnC,SAAY,IACZ,MAAS,GACT,KAAQ,MAHV,mBAAOsC,EAAP,KAAeC,EAAf,KAMA,EAAkCvC,mBAAS,CACzC,SAAY,EACZ,MAAS,EACT,KAAQ,IAHV,mBAAOwC,EAAP,KAAkBC,EAAlB,KAMA,EAAkCzC,mBAAS,YAA3C,mBAAO0C,EAAP,KAAkBC,EAAlB,KACA,EAA0B3C,mBAASsC,EAAM,UAAzC,mBAAON,EAAP,KAAcX,EAAd,KACA,EAAwBrB,oBAAS,GAAjC,mBAAOkC,EAAP,KAAaU,EAAb,KACA,EAAgC5C,mBAAS,GAAzC,mBAAO6C,EAAP,KAAiBC,EAAjB,KACA,EAAsC9C,oBAAS,GAA/C,mBAAO+C,EAAP,KAAoBC,EAApB,KACA,EAAoChD,mBAAS,qBAA7C,mBAAOiD,EAAP,KAAmBC,EAAnB,KACA,EAAwClD,mBAAS,WAAjD,mBAAOmD,EAAP,KAAqBC,EAArB,KAEAjD,qBAAU,WACR,IAAMkD,EAAO,IAAMrB,EACfa,IAAaQ,IACfhB,EAAa,GACbS,EAAYO,IAEd,IAAMC,EAAWvB,aAAY,kBAAMM,GAAa,SAACkB,GAAD,OAAWzD,KAAK0D,IAAID,EAAQF,EAAM,UAAO,KAIzF,OAHInB,GACFC,cAAcmB,GAET,kBAAMnB,cAAcmB,MAC1B,CAACtB,EAAOE,EAAMW,IAGjB,IAAMY,EAAc,SAACC,GAAD,OAAW,WAC7Bf,EAAae,GACbrC,EAASiB,EAAOoB,MAaZC,EAAe,SAAC3B,GAAD,OAAW,SAAC4B,GAC/BnB,GAAa,SAAAoB,GAAC,kCAAUA,GAAV,kBAAc7B,EAAQ4B,EAAGE,OAAOC,aAG1CC,EAAe,SAACC,GAAD,OAAU,SAACL,GAC9BV,EAAce,KAGVC,EAAgB,SAACvE,GAAD,OAAW,SAACiE,GAChCR,EAAgBzD,GAChB,IAAIwE,EAAaC,SAASC,KAAK7D,MAC/B2D,EAAWG,YAAY,cAAe3E,GACtCwE,EAAWG,YAAY,iBAAkB3E,KAG3C,OACE,uBAAMW,UAAU,YAAYE,MAAO,CAAEyC,cAArC,UACE,8BAAK,oBAAI3C,UAAU,iBAAiBE,MAAO,CAAE+D,SAAU,QAAlD,wBACL,qBAAIjE,UAAU,aAAd,UACE,oBAAIA,UAAW,eAA+B,aAAdoC,GAA4B,UAAW8B,QAASf,EAAY,YAA5F,sBACA,oBAAInD,UAAW,eAA+B,UAAdoC,GAAyB,UAAW8B,QAASf,EAAY,SAAzF,yBACA,oBAAInD,UAAW,eAA+B,SAAdoC,GAAwB,UAAW8B,QAASf,EAAY,QAAxF,2BAEF,sBAAKnD,UAAU,WAAf,UACE,cAAC,EAAD,CAAgBb,OAAQ,GAAIC,OAAQ,IAAKO,SAAUA,EAAUN,MAAOwD,IACpE,sBAAK7C,UAAU,QAAf,UACE,cAAC,EAAD,CAAOsB,QAASI,EAAOE,KAAMA,IAC7B,wBAAQ1B,MAAO,CAAEyC,cAAc3C,UAAU,WAAWkE,QAAS,kBAAM5B,GAAQ,SAAAiB,GAAC,OAAKA,MAAjF,SAAsF3B,EAAO,QAAU,eAG3G,qBAAKsC,QAAS,SAACZ,GAAD,OAAQZ,GAAe,SAAAa,GAAC,OAAKA,MAA3C,SACE,qBAAKvD,UAAU,SAASmE,IAAKC,EAAUrE,MAAM,KAAKD,OAAO,KAAKuE,IAAI,eAEnE5B,GAAe,sBAAKzC,UAAU,UAAf,UACd,sBAAKA,UAAU,4DAAf,UACE,8BACE,oBAAIA,UAAU,cAAd,wBAEF,qBAAKA,UAAU,OAAOkE,QAAS,SAACZ,GAAD,OAAQZ,GAAe,SAAAa,GAAC,OAAKA,MAA5D,qBAEF,qBAAKvD,UAAU,YACf,gCACE,mBAAGA,UAAU,2CAAb,4BACA,sBAAKA,UAAU,eAAf,UACE,gCACE,uBAAOsE,QAAQ,WAAWtE,UAAU,qBAApC,sBACA,wBAAQuE,GAAG,WAAWvE,UAAU,gBAAgByD,MAAOvB,EAAUsC,SAAUC,SAAUpB,EAAa,YAAlG,SACGqB,MAAMC,KAAKD,MAAM,IAAIE,QAAQC,KAAI,SAAAC,GAAC,OAAI,wBAAgBrB,MAAOqB,EAAI,EAA3B,SAA+BA,EAAI,GAAtBA,WAGxD,gCACE,uBAAOR,QAAQ,cAActE,UAAU,qBAAvC,yBACA,wBAAQuE,GAAG,cAAcvE,UAAU,gBAAgByD,MAAOvB,EAAU6C,MAAON,SAAUpB,EAAa,SAAlG,SACGqB,MAAMC,KAAKD,MAAM,IAAIE,QAAQC,KAAI,SAAAC,GAAC,OAAI,wBAAgBrB,MAAOqB,EAAI,EAA3B,SAA+BA,EAAI,GAAtBA,WAGxD,gCACE,uBAAOR,QAAQ,aAAatE,UAAU,qBAAtC,wBACA,wBAAQA,UAAU,gBAAgBuE,GAAG,aAAad,MAAOvB,EAAU8C,KAAMP,SAAUpB,EAAa,QAAhG,SACGqB,MAAMC,KAAKD,MAAM,IAAIE,QAAQC,KAAI,SAAAC,GAAC,OAAI,wBAAgBrB,MAAOqB,EAAI,EAA3B,SAA+BA,EAAI,GAAtBA,iBAK5D,qBAAK9E,UAAU,YACf,sBAAKA,UAAU,gCAAf,UACE,qBAAKA,UAAU,2CAAf,kBACA,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAW,eAAgC,sBAAf2C,EAAqC,gBAAkB,IAAKzC,MAAO,CAAEyC,WAAY,qBAAuBuB,QAASR,EAAa,qBAA/J,gBACA,qBAAK1D,UAAW,eAAgC,iBAAf2C,EAAgC,gBAAkB,IAAKzC,MAAO,CAAEyC,WAAY,gBAAkBuB,QAASR,EAAa,gBAArJ,gBACA,qBAAK1D,UAAW,eAAgC,0BAAf2C,EAAyC,gBAAkB,IAAKzC,MAAO,CAAEyC,WAAY,yBAA2BuB,QAASR,EAAa,yBAAvK,sBAGJ,qBAAK1D,UAAU,YACf,sBAAKA,UAAU,gCAAf,UACE,qBAAKA,UAAU,2CAAf,mBACA,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,aAAakE,QAASN,EAAc,WAAnD,SAAiF,YAAjBf,GAA8B,WAC9F,qBAAK7C,UAAU,cAAckE,QAASN,EAAc,WAApD,SAAkF,YAAjBf,GAA8B,WAC/F,qBAAK7C,UAAU,cAAckE,QAASN,EAAc,WAApD,SAAkF,YAAjBf,GAA8B,iBAGnG,8BACE,wBAAQ7C,UAAU,YAAYkE,QA7FtB,SAACZ,GACfZ,GAAe,SAAAa,GAAC,OAAKA,KACrBtB,EAAU,CACRuC,SAA+B,GAArBtC,EAAUsC,SACpBO,MAAyB,GAAlB7C,EAAU6C,MACjBC,KAAuB,GAAjB9C,EAAU8C,OAElBjE,EAAgC,GAAvBmB,EAAUE,KAsFb,4BClIK6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,SAM1BZ,M","file":"static/js/main.94b9fe50.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './CircleProgress.css';\n\nfunction CircleProgress(props) {\n\n    const { stroke, radius, color } = props;\n    const normalizedRadius = radius - stroke * 2;\n    const circumference = normalizedRadius * 2 * Math.PI;\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        setProgress(circumference - (props.progress / 100 * circumference))\n    }, [props.progress, circumference]);\n\n    return (\n        <svg\n            height={radius * 2}\n            width={radius * 2}\n        >\n            <circle className=\"circle\"\n                stroke={color}\n                strokeDasharray={`${circumference} ${circumference}`}\n                style={{ strokeDashoffset: progress }}\n                strokeWidth={stroke}\n                fill=\"transparent\"\n                r={normalizedRadius}\n                cx={radius}\n                cy={radius}\n            />\n        </svg>\n    )\n}\n\nexport default CircleProgress","import { useEffect, useState } from 'react';\nimport './Timer.css';\n\nconst zeroPad = (num, places) => String(num).padStart(places, '0')\n\n\nfunction Timer(props) {\n    // eslint-disable-next-line\n    const [timer, setTimer] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n    const [minutes, setMinutes] = useState(0);\n    const [lastTimer, setLastTimer] = useState(0);\n\n    useEffect(() => {\n        if (lastTimer !== props.timeSec) {\n            setLastTimer(props.timeSec);\n            setTimer(props.timeSec);\n            setSeconds(props.timeSec % 60);\n            setMinutes(Math.floor(props.timeSec / 60));\n        }\n        const intervalId = setInterval(() =>\n            setTimer(timer => {\n                setSeconds(timer % 60);\n                setMinutes(Math.floor(timer / 60));\n                return Math.max(timer - 1, 0);\n            }), 1000)\n        if (props.stop) {\n            clearInterval(intervalId);\n        }\n        return () => clearInterval(intervalId);\n    }, [props.timeSec, props.stop, lastTimer])\n\n    return (\n        <div>\n            <p className=\"timer-digit\">{zeroPad(minutes, 2)}:{zeroPad(seconds, 2)}</p>\n        </div>\n    )\n}\n\nexport default Timer;","export default __webpack_public_path__ + \"static/media/settings.a5a6edd5.png\";","import { useEffect, useState } from 'react';\n\nimport './App.css';\nimport CircleProgress from './CircleProgress';\nimport Timer from './Timer';\nimport settings from './settings.png';\n\nfunction App() {\n\n  const [progress, setProgresss] = useState(0);\n  const [timers, setTimers] = useState({\n    'pomodoro': 120,\n    'short': 60,\n    'long': 240\n  });\n\n  const [tmpTimers, setTmpTimers] = useState({\n    'pomodoro': 2,\n    'short': 1,\n    'long': 4\n  })\n\n  const [timerName, setTimerName] = useState('pomodoro')\n  const [timer, setTimer] = useState(timers['pomodoro'])\n  const [stop, setStop] = useState(true);\n  const [lastStep, setLastStep] = useState(0);\n  const [showSetting, setShowSetting] = useState(false);\n  const [fontFamily, setFontFamily] = useState('Arial, sans-serif')\n  const [primaryColor, setPrimaryColor] = useState('#f26d66')\n\n  useEffect(() => {\n    const step = 100 / timer;\n    if (lastStep !== step) {\n      setProgresss(0);\n      setLastStep(step);\n    }\n    const interval = setInterval(() => setProgresss((state) => Math.min(state + step, 100)), 1000)\n    if (stop) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [timer, stop, lastStep]);\n\n\n  const changeTimer = (index) => () => {\n    setTimerName(index);\n    setTimer(timers[index]);\n  }\n\n  const onApply = (ev) => {\n    setShowSetting(s => !s)\n    setTimers({\n      pomodoro: tmpTimers.pomodoro * 60,\n      short: tmpTimers.short * 60,\n      long: tmpTimers.long * 60,\n    });\n    setTimer(tmpTimers[timerName] * 60);\n  }\n\n  const onTimeChange = (timer) => (ev) => {\n    setTmpTimers(s => ({ ...s, [timer]: ev.target.value }));\n  }\n\n  const onFontChange = (font) => (ev) => {\n    setFontFamily(font)\n  }\n\n  const onColorChange = (color) => (ev) => {\n    setPrimaryColor(color);\n    let bodyStyles = document.body.style;\n    bodyStyles.setProperty('--bg-active', color);\n    bodyStyles.setProperty('--text-primary', color);\n  }\n\n  return (\n    <main className=\"flex main\" style={{ fontFamily }}>\n      <div><h1 className=\"text-secondary\" style={{ fontSize: \"3rem\" }}>Pomodoro</h1></div>\n      <ul className=\"timer-list\">\n        <li className={\"timer-item \" + (timerName === 'pomodoro' && \"active\")} onClick={changeTimer('pomodoro')}>pomodoro</li>\n        <li className={\"timer-item \" + (timerName === 'short' && \"active\")} onClick={changeTimer('short')}>short break</li>\n        <li className={\"timer-item \" + (timerName === 'long' && \"active\")} onClick={changeTimer('long')}>long break</li>\n      </ul>\n      <div className=\"progress\">\n        <CircleProgress stroke={10} radius={170} progress={progress} color={primaryColor}></CircleProgress>\n        <div className=\"timer\">\n          <Timer timeSec={timer} stop={stop}></Timer>\n          <button style={{ fontFamily }} className=\"btn-stop\" onClick={() => setStop(s => !s)}>{stop ? \"Start\" : \"Stop\"}</button>\n        </div>\n      </div>\n      <div onClick={(ev) => setShowSetting(s => !s)}>\n        <img className=\"rotate\" src={settings} width=\"24\" height=\"24\" alt=\"settings\"/>\n      </div>\n      {showSetting && <div className=\"setting\">\n        <div className='setting-header flex flex-row justify-between items-center'>\n          <div>\n            <h2 className='color-black'>Settings</h2>\n          </div>\n          <div className='exit' onClick={(ev) => setShowSetting(s => !s)}>&times;</div>\n        </div>\n        <div className='divider'></div>\n        <div>\n          <p className='uppercase text-xl spacing-xl color-black'>TIME (MINUTES)</p>\n          <div className='select-panel'>\n            <div>\n              <label htmlFor=\"pomodoro\" className='block custom-label'>pomodoro</label>\n              <select id=\"pomodoro\" className='custom-select' value={tmpTimers.pomodoro} onChange={onTimeChange('pomodoro')}>\n                {Array.from(Array(30).keys()).map(e => <option key={e} value={e + 1}>{e + 1}</option>)}\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"short-break\" className='block custom-label'>short break</label>\n              <select id=\"short-break\" className='custom-select' value={tmpTimers.short} onChange={onTimeChange('short')}>\n                {Array.from(Array(30).keys()).map(e => <option key={e} value={e + 1}>{e + 1}</option>)}\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"long-break\" className='block custom-label'>long break</label>\n              <select className='custom-select' id=\"long-break\" value={tmpTimers.long} onChange={onTimeChange('long')}>\n                {Array.from(Array(30).keys()).map(e => <option key={e} value={e + 1}>{e + 1}</option>)}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className='divider'></div>\n        <div className='flex flex-row justify-between'>\n          <div className='uppercase text-xl spacing-xl color-black'>Font</div>\n          <div className='flex flex-row'>\n            <div className={'dot bg-grey' + (fontFamily === \"Arial, sans-serif\" ? ' dot-selected' : '')} style={{ fontFamily: \"Arial, sans-serif\" }} onClick={onFontChange('Arial, sans-serif')}>Aa</div>\n            <div className={'dot bg-grey' + (fontFamily === \"Didot, serif\" ? ' dot-selected' : '')} style={{ fontFamily: \"Didot, serif\" }} onClick={onFontChange('Didot, serif')}>Aa</div>\n            <div className={'dot bg-grey' + (fontFamily === \"Bradley Hand, cursive\" ? ' dot-selected' : '')} style={{ fontFamily: \"Bradley Hand, cursive\" }} onClick={onFontChange('Bradley Hand, cursive')}>Aa</div>\n          </div>\n        </div>\n        <div className='divider'></div>\n        <div className='flex flex-row justify-between'>\n          <div className='uppercase text-xl spacing-xl color-black'>Color</div>\n          <div className='flex flex-row'>\n            <div className='dot bg-red' onClick={onColorChange('#f26d66')}>{primaryColor === '#f26d66' && '✔'}</div>\n            <div className='dot bg-pink' onClick={onColorChange('#db7ffb')}>{primaryColor === '#db7ffb' && '✔'}</div>\n            <div className='dot bg-aqua' onClick={onColorChange('#6df4fa')}>{primaryColor === '#6df4fa' && '✔'}</div>\n          </div>\n        </div>\n        <div>\n          <button className='btn-apply' onClick={onApply}>Apply</button>\n        </div>\n      </div>}\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}